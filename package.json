{
  "name": "react-compound-slider",
  "version": "2.0.0xena",
  "description": "Futuristic react slider component",
  "keywords": [
    "react",
    "react-component",
    "range-slider",
    "input-range",
    "range",
    "slider",
    "form",
    "input"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/serdimoa/react-compound-slider.git"
  },
  "main": "./index.js",
  "author": "Steven Hall",
  "license": "MIT",
  "peerDependencies": {
    "react": "^16.3.0"
  },
  "dependencies": {
    "@babel/runtime": "^7.4.4",
    "d3-array": "^1.2.4",
    "prop-types": "^15.7.2",
    "warning": "^3.0.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/core": "^7.4.4",
    "@babel/node": "^7.2.2",
    "@babel/plugin-proposal-class-properties": "^7.4.4",
    "@babel/plugin-transform-runtime": "^7.4.4",
    "@babel/preset-env": "^7.4.4",
    "@babel/preset-react": "^7.0.0",
    "@babel/register": "^7.4.4",
    "babel-eslint": "^10.0.1",
    "babel-plugin-istanbul": "^5.1.4",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "chai": "^4.2.0",
    "coveralls": "^3.0.3",
    "cross-env": "^5.2.0",
    "enzyme": "^3.9.0",
    "enzyme-adapter-react-16": "^1.13.0",
    "eslint": "^5.16.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-react": "^7.13.0",
    "fs-extra": "^8.0.1",
    "husky": "^1.3.1",
    "jsdom": "^13.2.0",
    "lint-staged": "^8.1.6",
    "mocha": "^5.2.0",
    "nyc": "^13.3.0",
    "prettier-eslint-cli": "^4.7.1",
    "react": "^16.8.6",
    "react-dom": "^16.8.6",
    "rimraf": "^2.6.3",
    "rollup": "^1.11.3",
    "rollup-plugin-babel": "^4.3.2",
    "rollup-plugin-commonjs": "^9.3.4",
    "rollup-plugin-node-resolve": "^4.2.4",
    "rollup-plugin-replace": "^2.2.0",
    "rollup-plugin-size-snapshot": "^0.8.0",
    "rollup-plugin-terser": "^4.0.4",
    "rollup-plugin-uglify": "^6.0.2",
    "sinon": "^7.3.2",
    "webpack": "^4.31.0"
  },
  "scripts": {
    "docs": "cd docs && npm install && npm run start",
    "prebuild": "npm run build:cln",
    "build": "npm run build:lib && npm run build:cpy",
    "build:cln": "rimraf build",
    "build:lib": "node ./scripts/build.js",
    "build:cpy": "cross-env BABEL_ENV=cjs babel-node ./scripts/copy-files.js",
    "lint": "eslint --fix src docs/src test --quiet --cache && echo \"eslint: no lint errors\"",
    "test": "cross-env BABEL_ENV=test mocha \"src/**/*.spec.js\"",
    "test:watch": "npm run test -- -w",
    "test:coverage": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc mocha \"src/**/*.spec.js\" && nyc report --reporter=lcov",
    "test:coverage:html": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc mocha \"src/**/*.spec.js\" && nyc report --reporter=html",
    "pretty": "prettier-eslint src/**/*.js --write --no-semi --single-quote --trailing-comma=all --print-width 80",
    "pretty-docs": "prettier-eslint docs/src/**/*.js --write --no-semi --single-quote --trailing-comma=all --print-width 80"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.js": [
      "prettier-eslint --write --no-semi --single-quote --trailing-comma=all --print-width 80",
      "git add"
    ]
  },
  "nyc": {
    "include": [
      "src/**/*.js"
    ],
    "exclude": [
      "**/*.spec.js"
    ],
    "sourceMap": false,
    "instrument": false
  }
}
